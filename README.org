* langlang

  As a Language Toolkit, =langlang= aims to provide tools interpreting
  and transforming data in lots of different formats. In the very
  likely case of a format that =langlang= is unaware of, it should be
  simple to add support to it.

  =langlang= currently provides a parsing system based on PEGs
  implemented as a virtual machine inspired by the style the great
  lpeg from the Lua developers is designed.

  The first feature on the way is the =llmatch= command line tool that
  can be used to match text from input using either a built in grammar
  or a user provided one. Example:

  #+begin_src shell
  $ llmatch -g 'll:csv' -i tiny.csv
  ((col0 col1 col2)
   (lin0 lin1 lin2))
  #+end_src

** Parse a custom format with a new grammar

   Grammars are conventionally written in files with the =.peg= so
   it's explicit that it isn't a grammar file with different semantics
   like from =yacc= or =antlr=. That's just the standard chosen for
   this project, the compiler and virtual machine don't care about the
   file name.
