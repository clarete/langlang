sysdcl     <- _ definition* EOF^eof
definition <- ID COLON value^defval
            / ID OPEN^defop definition* CLOSE^defcl
value      <- STRING / number / uri / ID
uri        <- proto path^uripth _
path       <- ((pathslash pathel)+
             / pathel path
             / pathel) pathslash?

# lexical rules
proto      <- ('file' / ('http' 's'?)) '://'
pathel     <- [a-zA-Z0-9-_.+~]+
pathslash  <- '/' / '\\'

number     <- NUMDEC / NUMHEX
NUMDEC     <- [1-9][0-9]* _
NUMHEX     <- HASH [a-fA-F0-9]+^hex _
STRING     <- DQUOTE (!DQUOTE .)* DQUOTE^strcl _
ID         <- [a-zA-Z_][a-zA-Z0-9-_.]* _
DEFINE     <- 'define' _
PAROPEN    <- '(' _
PARCLOSE   <- ')' _
OPEN       <- '{' _
CLOSE      <- '}' _
COLON      <- ':' _
COMA       <- ',' _
DQUOTE     <- '"'
HASH       <- '#'
EOF        <- !.
EOL        <- '\n' / '\r\n' / '\r'

# skip rules
_          <- (ws / comment)*
comment    <- '//' (!(EOL / EOF) .)*
ws         <- (' ' / '\t' / EOL)

# recovery rules
defop      <- (!'}' .)*
defcl      <-
defval     <-
hex        <-
eof        <-
uripth     <- (!ws .)*

# semantic rules
ID         -> joinall()
STRING     -> joinall()
proto      -> joinall()
pathel     -> joinall()

number     -> unwrap(%0)
NUMDEC     -> i64(joinall(), 10)
NUMHEX     -> i64(joinall(), 16)

_          -> discard()
DQUOTE     -> discard()
HASH       -> discard()
COLON      -> discard()
OPEN       -> discard()
CLOSE      -> discard()
