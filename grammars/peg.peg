// This grammar is a direct extract from "Parsing Expression Grammars:
// A Recognition-Based Syntactic Foundation" by Brian Ford,
// 2004. Chapter 2.
//
// Notes: For this file to be able to parse itself, we first had to
// add the rule `Comment` to we could have this comment :)
//
// Also, since by default it has manual space handling rules spread
// out throughout the whole grammar, the automatic space handling has
// to be disabled for this file to parse itself.  e.g.:
//
//   go run ./cmd/langlang/ \
//      -grammar ../grammars/peg.peg \
//      -input ../grammars/peg.peg \
//      --disable-whitespace-handling
//
// Notice the flag `--disable-capture-spacing` could *optionally* be
// added to tell the VM to skip the capturing of any nodes called
// `Spacing` *and* any nodes captured underneath a subtree of the
// `Spacing` rule.

// Hierarchical syntax
Grammar    <- Spacing Definition+ EndOfFile
Definition <- Identifier LEFTARROW Expression

Expression <- Sequence (SLASH Sequence)*
Sequence   <- Prefix*
Prefix     <- (AND / NOT)? Suffix
Suffix     <- Primary (QUESTION / STAR / PLUS)?
Primary    <- Identifier !LEFTARROW
            / OPEN Expression CLOSE
            / Literal / Class / DOT

// Lexical syntax
Identifier <- IdentStart IdentCont* Spacing
IdentStart <- [a-zA-Z_]
IdentCont  <- IdentStart / [0-9]

Literal    <- ['] (!['] Char)* ['] Spacing
            / ["] (!["] Char)* ["] Spacing
Class      <- '[' (!']' Range)* ']' Spacing
Range      <- Char '-' Char / Char
Char       <- '\\' [nrt'"\[\]\\]
            / '\\' [0-2][0-7][0-7]
            / '\\' [0-7][0-7]?
            / !'\\' .

LEFTARROW  <- '<-' Spacing
SLASH      <- '/' Spacing
AND        <- '&' Spacing
NOT        <- '!' Spacing
QUESTION   <- '?' Spacing
STAR       <- '*' Spacing
PLUS       <- '+' Spacing
OPEN       <- '(' Spacing
CLOSE      <- ')' Spacing
DOT        <- '.' Spacing

Spacing    <- (Space / Comment)*
Comment    <- '//' (!EndOfLine .)* EndOfLine
Space      <- ' ' / '\t' / EndOfLine
EndOfLine  <- '\r\n' / '\n' / '\r'
EndOfFile  <- !.
