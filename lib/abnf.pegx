# RFC 5234 ABNF

# 2.2. Rule Form
rulelist      <- (rule / ;c_wsp* ;c_nl)+
rule          <- rulename defined_as elements ;c_nl
rulename      <- [a-zA-Z][0-9a-zA-Z\-]*
defined_as    <- ;c_wsp* ('=' / '=/') ;c_wsp*
elements      <- ;c_wsp* alternation ;c_wsp*

c_wsp         <- ;c_nl* ;WSP
c_nl          <- comment / ;CRLF
comment       <- ;';' (;WSP / ;VCHAR)* ;CRLF

alternation   <- concatenation (;c_wsp* ;'/' ;c_wsp* concatenation)*
concatenation <- repetition (;c_wsp+ repetition)*
repetition    <- repeat? element

repeat        <- (DIGIT* ;'*' DIGIT*) / DIGIT+
element       <- rulename / group / option / chr_val / num_val / prose_val
group         <- ;'(' ;c_wsp* alternation ;c_wsp* ;')'
option        <- ;'[' ;c_wsp* alternation ;c_wsp* ;']'

# 2.3. Terminal Values (also 3.4. Value Range Alternatives)
chr_val <- DQUOTE (!DQUOTE .) DQUOTE
num_val <- ;'%' (bin_val / dec_val / hex_val)
bin_val <- 'b'[0-1]+([-.][0-1]+)?
dec_val <- 'd'[0-9]+([-.][0-9]+)?
hex_val <- 'x'[0-9a-fA-F]+('.'[0-9a-fA-F]+)?
prose_val <- '<' ([\x20-\x3D] / [\x3F-\x7E])* '>'

# B.1. Core ABNF
ALPHA    <- [a-zA-Z]
BIT      <- [0-1]
CHAR     <- [\x01-\x7f]
CR       <- ;'\x0d'
CRLF     <- ;CR ;LF / ;CR / ;LF
CTL      <- [\x00-\x1f] / '\x7f'
DIGIT    <- [0-9]
HEXDIGIT <- [0-9a-fA-F]
DQUOTE   <- ;'\x22'
HTAB     <- ;'\x09'
LF       <- ;'\x0A'

LWSP     <- ;(WSP / CRLF WSP)*
#OCTET    <- [\x00-\xff]
VCHAR    <- ;[\x21-\x7e]
SP       <- ;'\x20'
WSP      <- ;SP / ;HTAB
