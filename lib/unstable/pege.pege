# This grammar is the definition of the extensions introduced by Lang
# Lang to PEGs expressed using the extensions. This can be interpreted
# by the parsing machine using `pege.bin' generated from `pege.peg'.

# Bind the module compiled from `peg.peg' and merge all the names in
# `peg' into the local namespace.
%%import * from "peg"

# Redefine the Grammar rule to account for the extensions
Grammar    <- Spacing %C{ (Definition / LLExp)+ } EndOfFile
LLExp      <- LLMOD ((LLIMPORT Literal) /
                     (LLLT Identifier))
## {Meta,Import,Include}-Extension
LLMOD      <- '%' Spacing
LLIMPORT   <- '%import' Spacing
LLLT       <- '<' Spacing
LLCAP_OP   <- 'C{' Spacing
LLCL       <- '}' Spacing

# Redefine Char to accept chars to be expressed as hex numbers. E.g.:
# \x61 -> 97 -> 'a'. It will replace the definition of `Char' for
# users of this grammar or for grammars that import this grammar as an
# external module.
Char       <- '\\' [nrt'"\[\]\\]
            / '\\' [0-2][0-7][0-7]
            / '\\' [0-7][0-7]?
            / '\\x' [0-9a-fA-F]+ # This is the actual extension.
            / !'\\' .

# Redefine captures
Identifier <- %C{ IdentStart IdentCont* } Spacing
